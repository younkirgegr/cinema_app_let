// src/components/auth/LoginForm.jsx

import { useState } from 'react';
import { login } from '../../services/api'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π


export default function LoginForm({ onLogin }) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setIsLoading(true);

    try {
      console.log(' LoginForm: –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Ö–æ–¥–∞...');
      // 1. –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é API –¥–ª—è –≤—Ö–æ–¥–∞
      const data = await login(email, password);
      console.log('üì• LoginForm: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API:', data);

      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º
      if (!data || typeof data !== 'object') {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.');
      }

      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ –æ—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 401)
      if (data.error) {
        // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏—Å–ª–∞–ª –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º `error`, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
        throw new Error(data.error);
      }

      // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ
      if (!data.user.token){
        console.error(' LoginForm: –û—Ç–≤–µ—Ç –æ—Ç API –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç token:', data);
        throw new Error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
      }

      // 5. –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ localStorage
      console.log('LoginForm: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ localStorage...');
      localStorage.setItem('token', data.user.token);
      console.log('LoginForm: –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.');

      // 6. –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é onLogin, –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∏–∑ AppContent, 
      //    —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
      //    –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –∑–∞–≥–ª—É—à–∫—É.
      const userData = data.user || { first_name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" };
      console.log('LoginForm: –í—ã–∑–æ–≤ onLogin —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
      onLogin(userData);

    } catch (err) {
      // 7. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª—é–±—ã–µ –æ—à–∏–±–∫–∏ (—Å–µ—Ç–µ–≤—ã–µ, –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞, –ª–æ–≥–∏—á–µ—Å–∫–∏–µ)
      console.error('LoginForm: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ:', err);
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      setError(err.message || '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      // 8. –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –∑–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
      setIsLoading(false);
    }
  };

  return (
    <form onSubmit={handleSubmit} style={{ padding: '20px' }}>
      <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>–í—Ö–æ–¥</h2>
      
      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å */}
      {error && (
        <div style={{
          color: 'red',
          marginBottom: '15px',
          padding: '10px',
          backgroundColor: '#ffe6e6',
          borderRadius: '4px',
          fontSize: '14px'
        }}>
          {error}
        </div>
      )}

      {/* –ü–æ–ª–µ Email */}
      <div style={{ marginBottom: '15px' }}>
        <label htmlFor="login-email" style={{ display: 'block', marginBottom: '5px' }}>
          Email:
        </label>
        <input
          id="login-email"
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          placeholder="user@kino.ru"
          required
          style={{
            width: '100%',
            padding: '8px',
            boxSizing: 'border-box',
            border: '1px solid #ccc',
            borderRadius: '4px'
          }}
        />
      </div>

      {/* –ü–æ–ª–µ –ü–∞—Ä–æ–ª—å */}
      <div style={{ marginBottom: '20px' }}>
        <label htmlFor="login-password" style={{ display: 'block', marginBottom: '5px' }}>
          –ü–∞—Ä–æ–ª—å:
        </label>
        <input
          id="login-password"
          type="password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          placeholder="user123"
          required
          style={{
            width: '100%',
            padding: '8px',
            boxSizing: 'border-box',
            border: '1px solid #ccc',
            borderRadius: '4px'
          }}
        />
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
      <button
        type="submit"
        disabled={isLoading} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
        style={{
          width: '100%',
          padding: '10px',
          backgroundColor: isLoading ? '#cccccc' : '#e50914', // –°–µ—Ä—ã–π, –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
          color: 'white',
          border: 'none',
          borderRadius: '4px',
          cursor: isLoading ? 'not-allowed' : 'pointer', // –ú–µ–Ω—è–µ–º –∫—É—Ä—Å–æ—Ä
          fontWeight: 'bold'
        }}
      >
        {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
      </button>
    </form>
  );
}