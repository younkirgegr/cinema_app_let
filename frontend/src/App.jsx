// src/App.jsx
import { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import LoginForm from './components/auth/LoginForm';
import TicketsPage from './pages/TicketsPage';
import { getFilms } from './services/api';

export default function App() {
  const [user, setUser] = useState(null);
  const [films, setFilms] = useState([]);
  const [loading, setLoading] = useState(true);
  const [search, setSearch] = useState('');
  const [genre, setGenre] = useState('');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const token = localStorage.getItem('token');
    if (token) {
      setUser({ first_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' });
    }
  }, []);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∏–ª—å–º—ã
  useEffect(() => {
    getFilms({ search, genre })
      .then(data => {
        setFilms(Array.isArray(data) ? data : []);
        setLoading(false);
      })
      .catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å–º–æ–≤:', err);
        setFilms([]);
        setLoading(false);
      });
  }, [search, genre]);

  const handleLogin = (userData) => {
    setUser(userData);
    document.getElementById('login-modal').style.display = 'none';
  };

  return (
    <Router>
      <div style={{
        fontFamily: 'Arial, sans-serif',
        padding: '20px',
        backgroundColor: '#f5f5f5',
        minHeight: '100vh'
      }}>
        {/* –®–∞–ø–∫–∞ */}
        <header style={{
          textAlign: 'right',
          marginBottom: '20px'
        }}>
          {user ? (
            <span>–ü—Ä–∏–≤–µ—Ç, {user.first_name}!</span>
          ) : (
            <button
              onClick={() => document.getElementById('login-modal').style.display = 'block'}
              style={{
                padding: '8px 16px',
                backgroundColor: '#007bff',
                color: 'white',
                border: 'none',
                borderRadius: '4px',
                cursor: 'pointer'
              }}
            >
              –í–æ–π—Ç–∏
            </button>
          )}
        </header>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <h1 style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
          üé¨ –ê—Ñ–∏—à–∞ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞
        </h1>

        {/* –§–∏–ª—å—Ç—Ä—ã */}
        <div style={{
          display: 'flex',
          gap: '20px',
          marginBottom: '20px',
          flexWrap: 'wrap'
        }}>
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é..."
            value={search}
            onChange={(e) => setSearch(e.target.value)}
            style={{
              padding: '10px',
              borderRadius: '4px',
              border: '1px solid #ddd',
              width: '200px'
            }}
          />

          <select
            value={genre}
            onChange={(e) => setGenre(e.target.value)}
            style={{
              padding: '10px',
              borderRadius: '4px',
              border: '1px solid #ddd',
              width: '200px'
            }}
          >
            <option value="">–í—Å–µ –∂–∞–Ω—Ä—ã</option>
            <option value="1">–ë–æ–µ–≤–∏–∫</option>
            <option value="2">–ö–æ–º–µ–¥–∏—è</option>
            <option value="3">–î—Ä–∞–º–∞</option>
            <option value="4">–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞</option>
            <option value="5">–£–∂–∞—Å—ã</option>
            <option value="6">–ú—É–ª—å—Ç—Ñ–∏–ª—å–º</option>
          </select>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ */}
        {loading ? (
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å–º–æ–≤...</p>
        ) : (
          <div style={{
            display: 'flex',
            gap: '20px',
            flexWrap: 'wrap'
          }}>
            {films.map(film => (
              <div key={film.film_id} style={{
                border: '1px solid #ddd',
                borderRadius: '8px',
                padding: '16px',
                width: '200px',
                backgroundColor: 'white',
                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
              }}>
                <h3>{film.title}</h3>
                <p>–ñ–∞–Ω—Ä: {film.genre_name}</p>
                <p>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {film.duration_min} –º–∏–Ω</p>
                <p>–†–µ–π—Ç–∏–Ω–≥: {film.rating}</p>
                <p>‚≠ê {typeof film.avg_rating === 'number' ? film.avg_rating.toFixed(1) : '–ù–µ—Ç'}</p>
              </div>
            ))}
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ "–í—ã–±—Ä–∞—Ç—å –º–µ—Å—Ç–æ" */}
        <div style={{ marginTop: '30px' }}>
          <Link to="/tickets">
            <button
              style={{
                padding: '12px 24px',
                backgroundColor: '#e50914',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                fontWeight: 'bold',
                cursor: 'pointer'
              }}
            >
              üéüÔ∏è –í—ã–±—Ä–∞—Ç—å –º–µ—Å—Ç–æ
            </button>
          </Link>
        </div>

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Ö–æ–¥–∞ */}
        <div id="login-modal" style={{
          display: 'none',
          position: 'fixed',
          top: 0,
          left: 0,
          width: '100%',
          height: '100%',
          backgroundColor: 'rgba(0,0,0,0.7)',
          justifyContent: 'center',
          alignItems: 'center',
          zIndex: 1000
        }}>
          <div style={{
            backgroundColor: 'white',
            padding: '30px',
            borderRadius: '8px',
            width: '300px'
          }}>
            <button
              onClick={() => document.getElementById('login-modal').style.display = 'none'}
              style={{
                float: 'right',
                background: 'none',
                border: 'none',
                fontSize: '20px',
                cursor: 'pointer'
              }}
            >
              √ó
            </button>
            <LoginForm onLogin={handleLogin} />
          </div>
        </div>

        {/* –†–æ—É—Ç—ã */}
        <Routes>
          <Route path="/tickets" element={<TicketsPage />} />
        </Routes>
      </div>
    </Router>
  );
}